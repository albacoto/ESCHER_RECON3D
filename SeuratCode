
```{r}
library(Seurat)

ht_list <- list() #store the information map cell_barcode to hashID (or sampleID or indiviualID)
toc_list <- list() # store the raw count matrix

# Loop through batches (Batch1Channel1 to Batch8Channel1)
for (i in 1:8) {
  # Construct the path dynamically
  path <- paste0("/maps/projects/thor/people/gjl413/projects/psychENCODE/data/SZBDMulti-Seq/CellrangerOutput_Intron/Batch", 
                 i, 
                 "Channel1/outs/filtered_feature_bc_matrix/")
  counts <- Read10X(data.dir = path)
  
  
  toc_list[[i]] <- as.data.frame(counts$`Gene Expression`)
  df2 <- as.data.frame(counts$`Antibody Capture`)
  
  
  cellhash <- CreateSeuratObject(counts = df2,project = "cell_hashing", assay = "HTO")
  cellhash <- NormalizeData(cellhash, assay = "HTO", normalization.method = "CLR")
  cellhash <- HTODemux(cellhash, assay = "HTO", positive.quantile = 0.85)
  
  
  ht_list[[i]] <- as.data.frame(cellhash$hash.ID)

}

saveRDS(ht_list,file = "/maps/projects/thor/people/tbm613/hashtag2.rds")
saveRDS(toc_list,file = "/maps/projects/thor/people/tbm613/toc2.rds")

toc_list <- readRDS("/maps/projects/thor/people/tbm613/toc2.rds")
ht_list <- readRDS("/maps/projects/thor/people/tbm613/hashtag2.rds")

ht_list
```


----------

### LOAD THE FILES

library(Seurat)

# Load gene expression data
toc_list <- readRDS("/maps/projects/thor/people/tbm613/toc2.rds")

# Load HTO classification data
ht_list <- readRDS("/maps/projects/thor/people/tbm613/hashtag2.rds")

# Check the structure
class(toc_list)  # Should return "list"
class(ht_list)   # Should return "list"


### EXTRACT A SINGLE BATCH

# Extract gene expression data for the first batch
gene_matrix <- toc_list[[1]]

# Extract HTO classification for the same batch
ht_data <- ht_list[[1]]


### CREATE THE SEURAT OBJECT

seurat_obj <- CreateSeuratObject(counts = as.matrix(gene_matrix), project = "scRNAseq")


